{"Timestamp":"2022-06-01T17:26:13.7026330-05:00","Level":"Information","MessageTemplate":"Now listening on: {address}","RenderedMessage":"Now listening on: \"http://[::]:5000\"","Properties":{"address":"http://[::]:5000","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2022-06-01T17:26:13.7250920-05:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","RenderedMessage":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2022-06-01T17:26:13.7252840-05:00","Level":"Information","MessageTemplate":"Hosting environment: {envName}","RenderedMessage":"Hosting environment: \"Development\"","Properties":{"envName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2022-06-01T17:26:13.7254780-05:00","Level":"Information","MessageTemplate":"Content root path: {contentRoot}","RenderedMessage":"Content root path: \"/Users/aduss/code/dotnet/TodoApi/TodoApi\"","Properties":{"contentRoot":"/Users/aduss/code/dotnet/TodoApi/TodoApi","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2022-06-01T17:26:31.6505710-05:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","RenderedMessage":"Request starting HTTP/1.1 GET http://localhost:5000/WeatherForecast - -","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5000","PathBase":"","Path":"/WeatherForecast","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:5000/WeatherForecast - -","EventId":{"Id":1,"Name":"RequestStarting"},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMI43N3LT137:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43N3LT137"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:5000/WeatherForecast - -"}]}}
{"Timestamp":"2022-06-01T17:26:31.6959570-05:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","RenderedMessage":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HMI43N3LT137:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43N3LT137"}}
{"Timestamp":"2022-06-01T17:26:31.7253450-05:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","RenderedMessage":"Executing endpoint '\"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)\"'","Properties":{"EndpointName":"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMI43N3LT137:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43N3LT137"}}
{"Timestamp":"2022-06-01T17:26:31.7537860-05:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","RenderedMessage":"Route matched with \"{action = \\\"Get\\\", controller = \\\"WeatherForecast\\\"}\". Executing controller action with signature \"System.Collections.Generic.IEnumerable`1[TodoApi.WeatherForecast] Get()\" on controller \"TodoApi.Controllers.WeatherForecastController\" (\"TodoApi\").","Properties":{"RouteData":"{action = \"Get\", controller = \"WeatherForecast\"}","MethodInfo":"System.Collections.Generic.IEnumerable`1[TodoApi.WeatherForecast] Get()","Controller":"TodoApi.Controllers.WeatherForecastController","AssemblyName":"TodoApi","EventId":{"Id":3,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7b53da43-1426-40da-8a50-3f252d7b3bdc","ActionName":"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)","RequestId":"0HMI43N3LT137:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43N3LT137"}}
{"Timestamp":"2022-06-01T17:26:31.7669180-05:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","RenderedMessage":"Executing \"ObjectResult\", writing value of type '\"TodoApi.WeatherForecast[]\"'.","Properties":{"ObjectResultType":"ObjectResult","Type":"TodoApi.WeatherForecast[]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7b53da43-1426-40da-8a50-3f252d7b3bdc","ActionName":"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)","RequestId":"0HMI43N3LT137:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43N3LT137"}}
{"Timestamp":"2022-06-01T17:26:31.8251000-05:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","RenderedMessage":"Executed action \"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)\" in 64.9595ms","Properties":{"ActionName":"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)","ElapsedMilliseconds":64.9595,"EventId":{"Id":2,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7b53da43-1426-40da-8a50-3f252d7b3bdc","RequestId":"0HMI43N3LT137:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43N3LT137"}}
{"Timestamp":"2022-06-01T17:26:31.8272370-05:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","RenderedMessage":"Executed endpoint '\"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)\"'","Properties":{"EndpointName":"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMI43N3LT137:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43N3LT137"}}
{"Timestamp":"2022-06-01T17:26:31.8288260-05:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","RenderedMessage":"Request finished HTTP/1.1 GET http://localhost:5000/WeatherForecast - - - 200 - application/json;+charset=utf-8 183.6014ms","Properties":{"ElapsedMilliseconds":183.6014,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5000","PathBase":"","Path":"/WeatherForecast","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/1.1 GET http://localhost:5000/WeatherForecast - - - 200 - application/json;+charset=utf-8 183.6014ms","EventId":{"Id":2,"Name":"RequestFinished"},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMI43N3LT137:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43N3LT137"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/1.1 GET http://localhost:5000/WeatherForecast - - - 200 - application/json;+charset=utf-8 183.6014ms"}]}}
{"Timestamp":"2022-06-01T17:26:43.7743220-05:00","Level":"Information","MessageTemplate":"Application is shutting down...","RenderedMessage":"Application is shutting down...","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2022-06-01T17:32:21.0020550-05:00","Level":"Information","MessageTemplate":"Now listening on: {address}","RenderedMessage":"Now listening on: \"http://[::]:5000\"","Properties":{"address":"http://[::]:5000","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2022-06-01T17:32:21.0129110-05:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","RenderedMessage":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2022-06-01T17:32:21.0130570-05:00","Level":"Information","MessageTemplate":"Hosting environment: {envName}","RenderedMessage":"Hosting environment: \"Development\"","Properties":{"envName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2022-06-01T17:32:21.0131180-05:00","Level":"Information","MessageTemplate":"Content root path: {contentRoot}","RenderedMessage":"Content root path: \"/Users/aduss/code/dotnet/TodoApi/TodoApi\"","Properties":{"contentRoot":"/Users/aduss/code/dotnet/TodoApi/TodoApi","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2022-06-01T17:32:27.4572450-05:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","RenderedMessage":"Request starting HTTP/1.1 GET http://localhost:5000/WeatherForecast - -","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5000","PathBase":"","Path":"/WeatherForecast","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:5000/WeatherForecast - -","EventId":{"Id":1,"Name":"RequestStarting"},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMI43QDN9MV3:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43QDN9MV3"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:5000/WeatherForecast - -"}]}}
{"Timestamp":"2022-06-01T17:32:27.4962300-05:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","RenderedMessage":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HMI43QDN9MV3:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43QDN9MV3"}}
{"Timestamp":"2022-06-01T17:32:27.5228060-05:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","RenderedMessage":"Executing endpoint '\"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)\"'","Properties":{"EndpointName":"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMI43QDN9MV3:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43QDN9MV3"}}
{"Timestamp":"2022-06-01T17:32:27.5414400-05:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","RenderedMessage":"Route matched with \"{action = \\\"Get\\\", controller = \\\"WeatherForecast\\\"}\". Executing controller action with signature \"System.Collections.Generic.IEnumerable`1[TodoApi.WeatherForecast] Get()\" on controller \"TodoApi.Controllers.WeatherForecastController\" (\"TodoApi\").","Properties":{"RouteData":"{action = \"Get\", controller = \"WeatherForecast\"}","MethodInfo":"System.Collections.Generic.IEnumerable`1[TodoApi.WeatherForecast] Get()","Controller":"TodoApi.Controllers.WeatherForecastController","AssemblyName":"TodoApi","EventId":{"Id":3,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"8ef1f892-cd8c-4db0-be9e-140144264642","ActionName":"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)","RequestId":"0HMI43QDN9MV3:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43QDN9MV3"}}
{"Timestamp":"2022-06-01T17:32:27.5504250-05:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","RenderedMessage":"Executing \"ObjectResult\", writing value of type '\"TodoApi.WeatherForecast[]\"'.","Properties":{"ObjectResultType":"ObjectResult","Type":"TodoApi.WeatherForecast[]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"8ef1f892-cd8c-4db0-be9e-140144264642","ActionName":"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)","RequestId":"0HMI43QDN9MV3:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43QDN9MV3"}}
{"Timestamp":"2022-06-01T17:32:27.5955620-05:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","RenderedMessage":"Executed action \"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)\" in 46.7762ms","Properties":{"ActionName":"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)","ElapsedMilliseconds":46.7762,"EventId":{"Id":2,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"8ef1f892-cd8c-4db0-be9e-140144264642","RequestId":"0HMI43QDN9MV3:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43QDN9MV3"}}
{"Timestamp":"2022-06-01T17:32:27.5965480-05:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","RenderedMessage":"Executed endpoint '\"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)\"'","Properties":{"EndpointName":"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMI43QDN9MV3:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43QDN9MV3"}}
{"Timestamp":"2022-06-01T17:32:27.5979580-05:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","RenderedMessage":"Request finished HTTP/1.1 GET http://localhost:5000/WeatherForecast - - - 200 - application/json;+charset=utf-8 143.6766ms","Properties":{"ElapsedMilliseconds":143.6766,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5000","PathBase":"","Path":"/WeatherForecast","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/1.1 GET http://localhost:5000/WeatherForecast - - - 200 - application/json;+charset=utf-8 143.6766ms","EventId":{"Id":2,"Name":"RequestFinished"},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMI43QDN9MV3:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI43QDN9MV3"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/1.1 GET http://localhost:5000/WeatherForecast - - - 200 - application/json;+charset=utf-8 143.6766ms"}]}}
{"Timestamp":"2022-06-01T17:34:52.5590050-05:00","Level":"Information","MessageTemplate":"Application is shutting down...","RenderedMessage":"Application is shutting down...","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2022-06-01T18:06:11.2262200-05:00","Level":"Fatal","MessageTemplate":"Unable to start Kestrel.","RenderedMessage":"Unable to start Kestrel.","Exception":"System.IO.IOException: Failed to bind to address http://[::]:5000: address already in use.\n ---> Microsoft.AspNetCore.Connections.AddressInUseException: Address already in use\n ---> System.Net.Sockets.SocketException (48): Address already in use\n   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)\n   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)\n   at System.Net.Sockets.Socket.Bind(EndPoint localEP)\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.<Bind>g__BindSocket|13_0(<>c__DisplayClass13_0& )\n   --- End of inner exception stack trace ---\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.<Bind>g__BindSocket|13_0(<>c__DisplayClass13_0& )\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TransportManager.BindAsync(EndPoint endPoint, ConnectionDelegate connectionDelegate, EndpointConfig endpointConfig)\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.<>c__DisplayClass29_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)\n   --- End of inner exception stack trace ---\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)\n   at Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.BindAsync(AddressBindContext context)\n   at Microsoft.AspNetCore.Server.Kestrel.Core.AnyIPListenOptions.BindAsync(AddressBindContext context)\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IEnumerable`1 listenOptions, AddressBindContext context)\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)","Properties":{"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}}
{"Timestamp":"2022-06-01T18:06:30.2034940-05:00","Level":"Information","MessageTemplate":"Now listening on: {address}","RenderedMessage":"Now listening on: \"http://[::]:5000\"","Properties":{"address":"http://[::]:5000","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2022-06-01T18:06:30.2144770-05:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","RenderedMessage":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2022-06-01T18:06:30.2146010-05:00","Level":"Information","MessageTemplate":"Hosting environment: {envName}","RenderedMessage":"Hosting environment: \"Development\"","Properties":{"envName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2022-06-01T18:06:30.2146470-05:00","Level":"Information","MessageTemplate":"Content root path: {contentRoot}","RenderedMessage":"Content root path: \"/Users/aduss/code/dotnet/TodoApi/TodoApi\"","Properties":{"contentRoot":"/Users/aduss/code/dotnet/TodoApi/TodoApi","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2022-06-01T18:06:34.0887130-05:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","RenderedMessage":"Request starting HTTP/1.1 GET http://localhost:5000/WeatherForecast - -","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5000","PathBase":"","Path":"/WeatherForecast","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:5000/WeatherForecast - -","EventId":{"Id":1,"Name":"RequestStarting"},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMI44DFLFL4F:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI44DFLFL4F"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:5000/WeatherForecast - -"}]}}
{"Timestamp":"2022-06-01T18:06:34.1307500-05:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","RenderedMessage":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HMI44DFLFL4F:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI44DFLFL4F"}}
{"Timestamp":"2022-06-01T18:06:34.1661270-05:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","RenderedMessage":"Executing endpoint '\"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)\"'","Properties":{"EndpointName":"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMI44DFLFL4F:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI44DFLFL4F"}}
{"Timestamp":"2022-06-01T18:06:34.1898530-05:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","RenderedMessage":"Route matched with \"{action = \\\"Get\\\", controller = \\\"WeatherForecast\\\"}\". Executing controller action with signature \"System.Collections.Generic.IEnumerable`1[TodoApi.WeatherForecast] Get()\" on controller \"TodoApi.Controllers.WeatherForecastController\" (\"TodoApi\").","Properties":{"RouteData":"{action = \"Get\", controller = \"WeatherForecast\"}","MethodInfo":"System.Collections.Generic.IEnumerable`1[TodoApi.WeatherForecast] Get()","Controller":"TodoApi.Controllers.WeatherForecastController","AssemblyName":"TodoApi","EventId":{"Id":3,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"96e1d8ce-3b15-403e-a98b-081181b5685b","ActionName":"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)","RequestId":"0HMI44DFLFL4F:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI44DFLFL4F"}}
{"Timestamp":"2022-06-01T18:06:34.2013160-05:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","RenderedMessage":"Executing \"ObjectResult\", writing value of type '\"TodoApi.WeatherForecast[]\"'.","Properties":{"ObjectResultType":"ObjectResult","Type":"TodoApi.WeatherForecast[]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"96e1d8ce-3b15-403e-a98b-081181b5685b","ActionName":"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)","RequestId":"0HMI44DFLFL4F:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI44DFLFL4F"}}
{"Timestamp":"2022-06-01T18:06:34.2568310-05:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","RenderedMessage":"Executed action \"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)\" in 59.673ms","Properties":{"ActionName":"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)","ElapsedMilliseconds":59.673,"EventId":{"Id":2,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"96e1d8ce-3b15-403e-a98b-081181b5685b","RequestId":"0HMI44DFLFL4F:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI44DFLFL4F"}}
{"Timestamp":"2022-06-01T18:06:34.2584040-05:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","RenderedMessage":"Executed endpoint '\"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)\"'","Properties":{"EndpointName":"TodoApi.Controllers.WeatherForecastController.Get (TodoApi)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMI44DFLFL4F:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI44DFLFL4F"}}
{"Timestamp":"2022-06-01T18:06:34.2615880-05:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","RenderedMessage":"Request finished HTTP/1.1 GET http://localhost:5000/WeatherForecast - - - 200 - application/json;+charset=utf-8 175.7430ms","Properties":{"ElapsedMilliseconds":175.743,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5000","PathBase":"","Path":"/WeatherForecast","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/1.1 GET http://localhost:5000/WeatherForecast - - - 200 - application/json;+charset=utf-8 175.7430ms","EventId":{"Id":2,"Name":"RequestFinished"},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMI44DFLFL4F:00000002","RequestPath":"/WeatherForecast","ConnectionId":"0HMI44DFLFL4F"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/1.1 GET http://localhost:5000/WeatherForecast - - - 200 - application/json;+charset=utf-8 175.7430ms"}]}}
{"Timestamp":"2022-06-01T18:17:51.0532280-05:00","Level":"Information","MessageTemplate":"Application is shutting down...","RenderedMessage":"Application is shutting down...","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
